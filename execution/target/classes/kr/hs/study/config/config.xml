<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context
	                    http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/aop
	                    http://www.springframework.org/schema/aop/spring-aop.xsd">


	<bean id="advisor" class="kr.hs.study.advisor.AdviceClass" />
	<bean id="t1" class="kr.hs.study.beans.TestBean1" />
	<aop:config>
		<aop:aspect ref="advisor">
		
		
					 <aop:pointcut id="point" expression="execution(void kr.hs.study.*.*.*(..))" />
			<!-- 리턴타입이 void이고 kr.hs.study의 모든 패키지 모든 클래스 , 모든 메서드 -->
			
					 <aop:pointcut id="point" expression="execution(void *.*.*.*(..))" />
			<!-- 리턴타입이 void이고, 모든 패키지의 모든 클래스, 모든 메서드 -->
					
					 <aop:pointcut id="point" expression="execution(void *.*.*.*(..))" />
			<!-- 리턴타입이 int, 모든 패키지의 모든 클래스, 모든 메서드 -->
					 <aop:pointcut id="point" expression="execution(* *.*.*.*(..))" />
			<!-- 모든 리턴타입 , 모든패키지 모든 클래스, 모든메서드 -->
			
							
			 <aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.*(..))" />
			<!-- 리턴타입이 void이고 kr.hs.study.beans 패키지의 TestBean1클래스의 0개 이상 있는 method1() 메서드가 관심메서드이다 -->
			
		   <aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.*(..))" />
			<!-- 리턴타입이 void이고 kr.hs.study.beans 패키지의 모든 클래스, method1 메서드가 관심메서드이다 -->
			
				<!-- <aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.*.method1(..))" />
			   리턴타입이 void이고 kr.hs.study.beans 패키지의 모든 클래스, 모든메서드 -->
			   	
			   	
			   			<!-- <aop:pointcut id="point" expression="execution(void kr.hs.study.beans.*.*.method1(..))" />
			   리턴타입이 void이고 kr.hs.study.모든 패키지의 모든 클래스, 모든메서드 -->
			   

			<!-- <aop:pointcut id="point" expression="execution(void kr.hs.study.beans.* method1())" />
			리턴타입이 void이고 kr.hs.study.beans 패키지의 TestBean1클래스의 모든 메서드가 관심메서드이다 -->

			<!-- <aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(*,*))" />
			리턴타입이 void이고 kr.hs.study.beans 패키지의 TestBean1클래스의 모든타입 매개변수 2개 있는 method1() 메서드가 관심메서드이다-->
			
			<!-- <aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(int, String))" />
			리턴타입이 void이고 kr.hs.study.beans 패키지의 TestBean1클래스의 정수형 매개변수 1개와 문자열 매개변수 1개 가지고 있는 method1() 메서드가 관심메서드이다 -->

			<!-- <aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(int, int))" />
			리턴타입이 void이고 kr.hs.study.beans 패키지의 TestBean1클래스의 정수형 매개변수 2개를 가지고 있는 method1() 메서드가 관심메서드이다 -->

			<!--  <aop:pointcut id="point"expression="execution(void kr.hs.study.beans.TestBean1.method1(*))" /> -->
			<!-- 리턴타입이 void이고 kr.hs.study.beans 패키지의 TestBean1클래스의 1개 매개변수를 가지고 있는  method1() 메서드가 관심메서드이다 -->

			<!-- <aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(int))" /> -->
			<!-- 리턴타입이 void이고 kr.hs.study.beans 패키지의 TestBean1클래스의 int 매개변수를 가지고 있는 method1() 메서드가 관심메서드이다 -->
				
			<!-- <aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(java.lang.String))" /> -->
			<!-- 리턴타입이 void이고 kr.hs.study.beans 패키지의 TestBean1클래스의 String 매개변수를 가지고  있는 method1() 메서드가 관심메서드이다 -->


			<!-- <aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1())" /> -->
			<!-- 리턴타입이 void이고 kr.hs.study.beans 패키지의 TestBean1클래스의 method1() 메서드가 관심메서드이다 -->


			<aop:before method="beforeMethod" pointcut-ref="point" />
		</aop:aspect>
	</aop:config>

</beans>